events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:80;  # Le service backend écoute sur le port 80 à l'intérieur du réseau Docker
    }

    server {
        listen 80;  # Le reverse proxy écoute sur le port 80 à l'intérieur du conteneur

        index index.html;
        root /usr/share/nginx/html;

        location / {
            # Gérer les requêtes CORS préflight (OPTIONS)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                return 204;
            }

            # Gérer toutes les autres requêtes et autoriser CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;

            # Proxy vers le backend pour les requêtes autres que OPTIONS
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
